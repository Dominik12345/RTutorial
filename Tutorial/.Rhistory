data
max(1,2,3)
max(c(1,2,3)
)
maxima <- numeric(0)
maxima
maxima <- c(maxima,1)
maxima
MyFunction <- function(mat) {
maxima <- numeric(0)
for (k in 1:nrow(mat)) {
maximum <- c( maxima, max(mat[k,]) )
}
}
system.time(
MyFunction(data)
)
system.time(
result <- MyFunction(data)
)
print(result)
MyFunction <- function(mat) {
maxima <- numeric(0)
for (k in 1:nrow(mat)) {
maximum <- c( maxima, max(mat[k,]) )
}
return(maxima)
}
system.time(
result <- MyFunction(data)
)
print(result)
MyFunction <- function(mat) {
maxima <- numeric(0)
for (k in 1:nrow(mat)) {
maxima <- c( maxima, max(mat[k,]) )
}
return(maxima)
}
system.time(
result <- MyFunction(data)
)
print(result)
print(head(result))
data <- as.matrix( rep(randu,2))
data
data <- matrix( rnorm(n = 30000, mean = 1, sd = 0.2) ,
ncol = 3)
data
system.time(
result <- MyFunction(data)
)
print(head(result))
# 2)
system.time(
apply( X =  data, MARGIN = 1 , FUN = max)
)
system.time(
res1 <- MyFunction(data)
)
print(head(result))
# 2)
system.time(
res2 <- apply( X =  data, MARGIN = 1 , FUN = max)
)
res1 == res1
3 in c(1,2,3,4)
head( res1 == res2 )
all( res1 == res2 )
data <- matrix( rnorm(n = 30000, mean = 1, sd = 0.2) ,
ncol = 3)
# 1)
MyFunction <- function(mat) {
maxima <- numeric(0)
for (k in 1:nrow(mat)) {
maxima <- c( maxima, max(mat[k,]) )
}
return(maxima)
}
system.time(
res1 <- MyFunction(data)
)
# 2)
system.time(
res2 <- apply( X =  data, MARGIN = 1 , FUN = max)
)
song <- list('title' = 'mysong')
song
song$title
song1 <- list('title' = 'Let It Be', 'composer' = 'Paul McCartney',
'genre' = 'Rock Ballade' , 'year' = 1970,
'artist' = 'The Beatles', 'link' = 'www')
song
song1
print(song1)
song1 <- list('title' = 'Let It Be', 'composer' = 'Paul McCartney',
'genre' = 'Rock Ballade' , 'year' = 1970,
'artist' = 'The Beatles', 'link' = 'www')
song2 <- list('title' = 'Highway to Hell',
'composer' = 'Angus Young, Malcolm Young and Bon Scott',
'genre' = 'Hard Rock' , 'year' = 1979,
'artist' = 'AC/DC', 'link' = 'www')
play
print(song1)
class(song1)
attr(song1)
attr(song1, which = 'class')
attr(song1, 'class')
attr(song1, 'class') <- 'song'
song1
class(song1)
class(song2) <- 'song'
song2
methods(print)
# Check the class of song1
print(class(song1))
song1 <- list('title' = 'Let It Be', 'composer' = 'Paul McCartney',
'genre' = 'Rock Ballade' , 'year' = 1970,
'artist' = 'The Beatles', 'link' = 'www')
song2 <- list('title' = 'Highway to Hell',
'composer' = 'Angus Young, Malcolm Young and Bon Scott',
'genre' = 'Hard Rock' , 'year' = 1979,
'artist' = 'AC/DC', 'link' = 'www')
# Check the class of song1
print(class(song1))
print(class(song1))
# We define the class 'song' implicitly.
attr(song1, 'class') <- 'song'
class(song2) <- 'song'
print(class(song1))
# Try methods(print). You will see all classes, for which print() is
# defined.
methods(print)
'a' + 'b'
parse('a','b','')
paste('a','b','')
paste('a','b',sep = '')
combine_words
paste('a','b','c')
# We now define print() for the class 'song'
print.song <- function(mysong) {
paste(mysong$title, 'is a song by', mysong$artist, sep = ' ')
}
print(song1)
# We now define print() for the class 'song'
print.song <- function(mysong) {
paste(mysong$title, 'is a song by', mysong$artist,'.', sep = ' ')
}
print(song1)
# We now define print() for the class 'song'
print.song <- function(mysong) {
paste(mysong$title, 'is a song by', paste(mysong$artist,'.',sep='')
, sep = ' ')
}
print(song1)
mode(song1)
is.song <- function(mysong) {
if (class(mysong == 'song')) {
return(TRUE)
} else {
return{FALSE}
}
}
is.song <- function(mysong) {
if (class(mysong == 'song')) {
return(TRUE)
} else {
return(FALSE)
}
}
is.song(song1)
is.song <- function(mysong) {
if (class(mysong) == 'song') {
return(TRUE)
} else {
return(FALSE)
}
}
is.sog(song1)
is.song(song1)
is.song(5)
song3 <- song()
song <- function(title = '', composer = '',
genre = '' , year = 2018,
artist = '') {
mysong <- list('title' = title, 'composer' = composer,
'genre' = genre , 'year' = year,
'artist' = artist)
class(mysong) <- 'song'
return(mysong)
}
song3 <- song()
song3
song3$title
song <- function(title, composer, genre, year, artist) {
UseMethod(song)
}
song.default <- function(title = NA, composer = NA,
genre = NA , year = NA,
artist = NA) {
mysong <- list('title' = title, 'composer' = composer,
'genre' = genre , 'year' = year,
'artist' = artist)
class(mysong) <- 'song'
return(mysong)
}
song.pop <- function(title = NA, composer = NA,
genre = 'pop' , year = 2018,
artist = NA) {
mysong <- list('title' = title, 'composer' = composer,
'genre' = genre , 'year' = year,
'artist' = artist)
class(mysong) <- 'song'
return(mysong)
}
song1 <- song()
song <- function(title, composer, genre, year, artist) {
UseMethod('song')
}
song1 <- song()
song1
print(song1)
song2 <- song.pop()
song2
print(song2)
# We now define print() for the class 'song'
print.song <- function(mysong) {
paste(mysong$title, 'is a',mysong$genre,'song by', paste(mysong$artist,'.',sep='')
, sep = ' ')
}
is.song <- function(mysong) {
if (class(mysong) == 'song') {
return(TRUE)
} else {
return(FALSE)
}
}
song <- function(title, composer, genre, year, artist) {
UseMethod('song')
}
song.default <- function(title = NA, composer = NA,
genre = NA , year = NA,
artist = NA) {
mysong <- list('title' = title, 'composer' = composer,
'genre' = genre , 'year' = year,
'artist' = artist)
class(mysong) <- 'song'
return(mysong)
}
song.pop <- function(title = NA, composer = NA,
genre = 'pop' , year = 2018,
artist = NA) {
mysong <- list('title' = title, 'composer' = composer,
'genre' = genre , 'year' = year,
'artist' = artist)
class(mysong) <- 'song'
return(mysong)
}
print(song1)
print(song2)
NA
NA_real_
NA_character_
song <- function(title, composer, genre, year, artist) {
UseMethod('song')
}
song.default <- function(title = NA, composer = NA,
genre = NA , year = NA,
artist = NA) {
mysong <- list('title' = title, 'composer' = composer,
'genre' = genre , 'year' = year,
'artist' = artist)
class(mysong) <- 'song'
return(mysong)
}
song.pop <- function(title = NA, composer = NA,
genre = 'pop' , year = 2018,
artist = NA) {
mysong <- song.default('title' = title, 'composer' = composer,
'genre' = genre , 'year' = year,
'artist' = artist)
return(mysong)
}
song1 <- song.pop()
song1
print(song1)
setClass(Class = "classname" ,
representation(attr1 = 'numeric',
attr2 = 'character'),
prototype(attr1 = NA_real_, attr2 = NA_character_)
)
test <- classname()
test <- new(classname)
test <- new('classname')
test
setClass(Class = "MyClass" ,
representation(attr1 = 'numeric',
attr2 = 'character'),
prototype(attr1 = NA_real_, attr2 = NA_character_)
)
testobject <- new('MyClass')
print(testobject)
print(getSlots(testobject))
print(getSlots('testobject'))
print(getSlots('MyClass'))
song <- function(title, composer, genre, year, artist) {
UseMethod('song')
}
song.default <- function(title = NA_character_, composer = NA_character_,
genre = NA_character_ , year = NA_integer_,
artist = NA_character_) {
mysong <- list('title' = title, 'composer' = composer,
'genre' = genre , 'year' = year,
'artist' = artist)
class(mysong) <- 'song'
return(mysong)
}
song.pop <- function(title, composer,
genre = 'pop' , year = 2018,
artist) {
mysong <- song.default('title' = title, 'composer' = composer,
'genre' = genre , 'year' = year,
'artist' = artist)
return(mysong)
}
song1 <- song.pop()
song.pop <- function(title, composer,
genre = 'pop' , year = 2018,
artist) {
mysong <- song.default('genre' = genre , 'year' = year)
return(mysong)
}
song1 <- song.pop()
song1
print(song1)
setClass(Class = "Song" ,
representation(title = 'character',
composer = 'character',
genre = 'character',
year = 'integer',
artist = 'character'),
prototype(title = NA_character_,
composer = NA_character_,
genre = NA_character_,
year = NA_integer_,
artist = NA_character_)
)
song1 <- new('Song')
song1
source('https://www.youtube.com/')
source('http://www.youtube.com/')
browseURL('http://www.youtube.com/')
# clear the Global Environment
rm(list=ls())
song1 <- list('title' = 'Let It Be', 'composer' = 'Paul McCartney',
'genre' = 'Rock Ballade' , 'year' = 1970,
'artist' = 'The Beatles',
'link' = 'https://www.youtube.com/watch?v=2xDzVZcqtYI')
song2 <- list('title' = 'Highway to Hell',
'composer' = 'Angus Young, Malcolm Young and Bon Scott',
'genre' = 'Hard Rock' , 'year' = 1979,
'artist' = 'AC/DC',
'link' = 'https://www.youtube.com/watch?v=l482T0yNkeo')
# Check the class of song1
print(class(song1))
# We define the class 'song' implicitly.
attr(song1, 'class') <- 'song'
class(song2) <- 'song'
print(class(song1))
# Try methods(print). You will see all classes, for which print() is
# defined.
methods(print)
# We now define print() for the class 'song'
print.song <- function(mysong) {
paste(mysong$title, 'is a',mysong$genre,'song by', paste(mysong$artist,'.',sep='')
, sep = ' ')
}
is.song <- function(mysong) {
if (class(mysong) == 'song') {
return(TRUE)
} else {
return(FALSE)
}
}
play.song <- function(mysong)
play.song <- function(mysong) {
browseURL(mysong$link)
}
play(song1)
play.song(song1)
# clear the Global Environment
rm(list=ls())
song1 <- list('title' = 'Let It Be', 'composer' = 'Paul McCartney',
'genre' = 'Rock Ballade' , 'year' = 1970,
'artist' = 'The Beatles',
'link' = 'https://www.youtube.com/watch?v=2xDzVZcqtYI')
song2 <- list('title' = 'Highway to Hell',
'composer' = 'Angus Young, Malcolm Young and Bon Scott',
'genre' = 'Hard Rock' , 'year' = 1979,
'artist' = 'AC/DC',
'link' = 'https://www.youtube.com/watch?v=l482T0yNkeo')
# Check the class of song1
print(class(song1))
class(song2) <- 'song'
# We define the class 'song' implicitly.
attr(song1, 'class') <- 'song'
print(class(song1))
# Try methods(print). You will see all classes, for which print() is
# defined.
methods(print)
# We now define print() for the class 'song'
print.song <- function(mysong) {
paste(mysong$title, 'is a',mysong$genre,'song by', paste(mysong$artist,'.',sep='')
, sep = ' ')
}
get_artist <- function(object) {
UseMethod('get_artist')
}
get_artist.song <- function(object) {
return(object$artist)
}
song1
get_artist(song1)
# 2)
play <- function(object) {
UseMethod('play')
}
play.song <- function(mysong) {
browseURL(mysong$link)
}
play(song1)
setClass(Class = "Song" ,
representation(title = 'character',
composer = 'character',
genre = 'character',
year = 'integer',
artist = 'character',
link = 'character'),
prototype(title = NA_character_,
composer = NA_character_,
genre = NA_character_,
year = NA_integer_,
artist = NA_character_,
link = NA_character_)
)
song1 <- new('Song', title = 'Let It Be', composer = 'Paul McCartney',
genre = 'Rock Ballade' , year = 1970,
artist = 'The Beatles',
link = 'https://www.youtube.com/watch?v=2xDzVZcqtYI')
song1 <- new('Song', title = 'Let It Be', composer = 'Paul McCartney',
genre = 'Rock Ballade' , year = as.integer(1970),
artist = 'The Beatles',
link = 'https://www.youtube.com/watch?v=2xDzVZcqtYI')
song1
play(song1)
setMethod('play', function(object)) {
browseURL(object@link)
}
setMethod('play', function(object) {
browseURL(object@link)
}
}
song1 <- new('Song', title = 'Let It Be', composer = 'Paul McCartney',
genre = 'Rock Ballade' , year = as.integer(1970),
artist = 'The Beatles',
link = 'https://www.youtube.com/watch?v=2xDzVZcqtYI')
play(song1)
setMethod('play', function(object) {
browseURL(object@link)
}
)
setMethod('play',signature = 'Song' ,function(object) {
browseURL(object@link)
}
)
play(song1)
source('4_Classes.R')
# clear the Global Environment
rm(list=ls())
source('4_Classes.R')
source('data/myscript.R')
source('data/myscript.R')
source('data\myscript.R')
source('myscript.R')
source('data/myscript.R')
source('4_Classes.R')
source('data/myscipt.R')
source('data/myscript.R')
# clear the Global Environment
rm(list=ls())
source('data/myscript.R')
# clear the Global Environment
rm(list=ls())
source('data/myscript.R')
play(song1)
install.packages('json')
install.packages('jsonlite')
library(jsonlite)
jsonlite::toJSON(randu)
jsonlite::write_json( x = randu ,path = 'data/mydata')
'test'
'test'[1]
'test'[2]
as.vector('test')
class('test')
typeof('test')
cat('test')
readLines(n=1)
word <- readLines(n=1)
strsplit(word)
strsplit(x = word)
strsplit(x = word, split = NULL)
